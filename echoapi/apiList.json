[
  {
    "project_id": "",
    "target_id": "5ccfb6ffb8005",
    "parent_id": "6a7d19bbb8006",
    "target_type": "api",
    "name": "All Vehicles",
    "sort": 2,
    "version": 0,
    "mark_id": "",
    "status": 1,
    "is_changed": -1,
    "is_create": -1,
    "method": "GET",
    "url": "{{baseUrl}}/vehicles",
    "request": {
      "auth": {
        "type": "inherit",
        "kv": {
          "key": "",
          "value": "",
          "in": "header"
        },
        "bearer": {
          "key": ""
        },
        "basic": {
          "username": "",
          "password": ""
        },
        "digest": {
          "username": "",
          "password": "",
          "realm": "",
          "nonce": "",
          "algorithm": "MD5",
          "qop": "",
          "nc": "",
          "cnonce": "",
          "opaque": "",
          "disableRetryRequest": false
        },
        "oauth1": {
          "consumerKey": "",
          "consumerSecret": "",
          "signatureMethod": "HMAC-SHA1",
          "addEmptyParamsToSign": true,
          "includeBodyHash": true,
          "addParamsToHeader": false,
          "realm": "",
          "version": "1.0",
          "nonce": "",
          "timestamp": "",
          "verifier": "",
          "callback": "",
          "tokenSecret": "",
          "token": "",
          "disableHeaderEncoding": false
        },
        "oauth2": {
          "addTokenTo": "header",
          "headerPrefix": "Bearer",
          "access_token": "",
          "grant_type": "password_credentials",
          "redirect_uri": "",
          "authUrl": "",
          "accessTokenUrl": "",
          "clientId": "",
          "clientSecret": "",
          "username": "",
          "password": "",
          "challengeAlgorithm": "S256",
          "code_verifier": "Bearer",
          "scope": "",
          "state": "",
          "client_authentication": "header",
          "refreshTokenUrl": "",
          "authRequestParams": [],
          "tokenRequestParams": [],
          "refreshRequestParams": []
        },
        "hawk": {
          "authId": "",
          "authKey": "",
          "algorithm": "",
          "user": "",
          "nonce": "",
          "extraData": "",
          "app": "",
          "delegation": "",
          "timestamp": "",
          "includePayloadHash": false
        },
        "awsv4": {
          "accessKey": "",
          "secretKey": "",
          "region": "",
          "service": "",
          "sessionToken": "",
          "addAuthDataToQuery": false
        },
        "ntlm": {
          "username": "",
          "password": "",
          "domain": "",
          "workstation": "",
          "disableRetryRequest": false
        },
        "edgegrid": {
          "accessToken": "",
          "clientToken": "",
          "clientSecret": "",
          "nonce": "",
          "timestamp": "",
          "baseURi": "",
          "headersToSign": ""
        },
        "noauth": {},
        "jwt": {
          "addTokenTo": "header",
          "algorithm": "HS256",
          "secret": "",
          "isSecretBase64Encoded": false,
          "payload": "",
          "headerPrefix": "Bearer",
          "queryParamKey": "token",
          "header": ""
        },
        "asap": {
          "alg": "HS256",
          "iss": "",
          "aud": "",
          "kid": "",
          "privateKey": "",
          "sub": "",
          "claims": "",
          "exp": ""
        }
      },
      "body": {
        "mode": "none",
        "parameter": [],
        "raw": "",
        "raw_parameter": [],
        "raw_schema": {
          "type": "object"
        },
        "binary": null
      },
      "pre_tasks": [],
      "post_tasks": [],
      "header": {
        "parameter": []
      },
      "query": {
        "parameter": [],
        "query_add_equal": 1
      },
      "cookie": {
        "parameter": []
      },
      "restful": {
        "parameter": []
      }
    },
    "response": {
      "is_check_result": 1,
      "example": [
        {
          "example_id": "1",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Success",
            "is_default": 1,
            "code": "200",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        {
          "example_id": "2",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Failure",
            "is_default": -1,
            "code": "404",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        }
      ]
    },
    "description": "",
    "tags": [],
    "ai_expect_enable": -1,
    "is_check_result": 1,
    "is_socket": 1,
    "is_locked": -1,
    "is_force": -1,
    "attribute_info": {},
    "protocol": "http/1.1",
    "ai_expect": {
      "list": [],
      "none_math_expect_id": ""
    },
    "is_deleted": -1,
    "is_conflicted": -1,
    "vscode_version": "1.7.12"
  },
  {
    "project_id": "",
    "target_id": "6a6d7b238c005",
    "parent_id": "6a7d19bbb8006",
    "target_type": "api",
    "name": "One Vehicle",
    "sort": 5,
    "version": 0,
    "mark_id": "",
    "status": 1,
    "is_changed": -1,
    "is_create": -1,
    "method": "GET",
    "url": "{{baseUrl}}/vehicles/{{id}}",
    "request": {
      "auth": {
        "type": "inherit",
        "kv": {
          "key": "",
          "value": "",
          "in": "header"
        },
        "bearer": {
          "key": ""
        },
        "basic": {
          "username": "",
          "password": ""
        },
        "digest": {
          "username": "",
          "password": "",
          "realm": "",
          "nonce": "",
          "algorithm": "MD5",
          "qop": "",
          "nc": "",
          "cnonce": "",
          "opaque": "",
          "disableRetryRequest": false
        },
        "oauth1": {
          "consumerKey": "",
          "consumerSecret": "",
          "signatureMethod": "HMAC-SHA1",
          "addEmptyParamsToSign": true,
          "includeBodyHash": true,
          "addParamsToHeader": false,
          "realm": "",
          "version": "1.0",
          "nonce": "",
          "timestamp": "",
          "verifier": "",
          "callback": "",
          "tokenSecret": "",
          "token": "",
          "disableHeaderEncoding": false
        },
        "oauth2": {
          "addTokenTo": "header",
          "headerPrefix": "Bearer",
          "access_token": "",
          "grant_type": "password_credentials",
          "redirect_uri": "",
          "authUrl": "",
          "accessTokenUrl": "",
          "clientId": "",
          "clientSecret": "",
          "username": "",
          "password": "",
          "challengeAlgorithm": "S256",
          "code_verifier": "Bearer",
          "scope": "",
          "state": "",
          "client_authentication": "header",
          "refreshTokenUrl": "",
          "authRequestParams": [],
          "tokenRequestParams": [],
          "refreshRequestParams": []
        },
        "hawk": {
          "authId": "",
          "authKey": "",
          "algorithm": "",
          "user": "",
          "nonce": "",
          "extraData": "",
          "app": "",
          "delegation": "",
          "timestamp": "",
          "includePayloadHash": false
        },
        "awsv4": {
          "accessKey": "",
          "secretKey": "",
          "region": "",
          "service": "",
          "sessionToken": "",
          "addAuthDataToQuery": false
        },
        "ntlm": {
          "username": "",
          "password": "",
          "domain": "",
          "workstation": "",
          "disableRetryRequest": false
        },
        "edgegrid": {
          "accessToken": "",
          "clientToken": "",
          "clientSecret": "",
          "nonce": "",
          "timestamp": "",
          "baseURi": "",
          "headersToSign": ""
        },
        "noauth": {},
        "jwt": {
          "addTokenTo": "header",
          "algorithm": "HS256",
          "secret": "",
          "isSecretBase64Encoded": false,
          "payload": "",
          "headerPrefix": "Bearer",
          "queryParamKey": "token",
          "header": ""
        },
        "asap": {
          "alg": "HS256",
          "iss": "",
          "aud": "",
          "kid": "",
          "privateKey": "",
          "sub": "",
          "claims": "",
          "exp": ""
        }
      },
      "body": {
        "mode": "none",
        "parameter": [],
        "raw": "",
        "raw_parameter": [],
        "raw_schema": {
          "type": "object"
        },
        "binary": null
      },
      "pre_tasks": [],
      "post_tasks": [],
      "header": {
        "parameter": []
      },
      "query": {
        "parameter": [],
        "query_add_equal": 1
      },
      "cookie": {
        "parameter": []
      },
      "restful": {
        "parameter": []
      }
    },
    "response": {
      "is_check_result": 1,
      "example": [
        {
          "example_id": "1",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Success",
            "is_default": 1,
            "code": "200",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        {
          "example_id": "2",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Failure",
            "is_default": -1,
            "code": "404",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        }
      ]
    },
    "description": "",
    "tags": [],
    "ai_expect_enable": -1,
    "is_check_result": 1,
    "is_socket": 1,
    "is_locked": -1,
    "is_force": -1,
    "attribute_info": {},
    "protocol": "http/1.1",
    "ai_expect": {
      "list": [],
      "none_math_expect_id": ""
    },
    "is_deleted": -1,
    "is_conflicted": -1,
    "vscode_version": "1.7.12"
  },
  {
    "project_id": "",
    "target_id": "6a7d19bbb8006",
    "parent_id": "0",
    "target_type": "folder",
    "name": "Vehicles",
    "sort": 1,
    "version": 0,
    "status": 1,
    "is_changed": 1,
    "is_create": 1,
    "description": "",
    "server_id": "0",
    "request": {
      "header": {
        "parameter": []
      },
      "query": {
        "parameter": []
      },
      "body": {
        "parameter": []
      },
      "cookie": {
        "parameter": []
      },
      "auth": {
        "type": "inherit",
        "kv": {
          "key": "",
          "value": "",
          "in": "header"
        },
        "bearer": {
          "key": ""
        },
        "basic": {
          "username": "",
          "password": ""
        },
        "digest": {
          "username": "",
          "password": "",
          "realm": "",
          "nonce": "",
          "algorithm": "MD5",
          "qop": "",
          "nc": "",
          "cnonce": "",
          "opaque": "",
          "disableRetryRequest": false
        },
        "oauth1": {
          "consumerKey": "",
          "consumerSecret": "",
          "signatureMethod": "HMAC-SHA1",
          "addEmptyParamsToSign": true,
          "includeBodyHash": true,
          "addParamsToHeader": false,
          "realm": "",
          "version": "1.0",
          "nonce": "",
          "timestamp": "",
          "verifier": "",
          "callback": "",
          "tokenSecret": "",
          "token": "",
          "disableHeaderEncoding": false
        },
        "oauth2": {
          "addTokenTo": "header",
          "headerPrefix": "Bearer",
          "access_token": "",
          "grant_type": "password_credentials",
          "redirect_uri": "",
          "authUrl": "",
          "accessTokenUrl": "",
          "clientId": "",
          "clientSecret": "",
          "username": "",
          "password": "",
          "challengeAlgorithm": "S256",
          "code_verifier": "Bearer",
          "scope": "",
          "state": "",
          "client_authentication": "header",
          "refreshTokenUrl": "",
          "authRequestParams": [],
          "tokenRequestParams": [],
          "refreshRequestParams": []
        },
        "hawk": {
          "authId": "",
          "authKey": "",
          "algorithm": "",
          "user": "",
          "nonce": "",
          "extraData": "",
          "app": "",
          "delegation": "",
          "timestamp": "",
          "includePayloadHash": false
        },
        "awsv4": {
          "accessKey": "",
          "secretKey": "",
          "region": "",
          "service": "",
          "sessionToken": "",
          "addAuthDataToQuery": false
        },
        "ntlm": {
          "username": "",
          "password": "",
          "domain": "",
          "workstation": "",
          "disableRetryRequest": false
        },
        "edgegrid": {
          "accessToken": "",
          "clientToken": "",
          "clientSecret": "",
          "nonce": "",
          "timestamp": "",
          "baseURi": "",
          "headersToSign": ""
        },
        "noauth": {},
        "jwt": {
          "addTokenTo": "header",
          "algorithm": "HS256",
          "secret": "",
          "isSecretBase64Encoded": false,
          "payload": "",
          "headerPrefix": "Bearer",
          "queryParamKey": "token",
          "header": ""
        },
        "asap": {
          "alg": "HS256",
          "iss": "",
          "aud": "",
          "kid": "",
          "privateKey": "",
          "sub": "",
          "claims": "",
          "exp": ""
        }
      },
      "pre_tasks": [],
      "post_tasks": []
    },
    "is_force": -1,
    "is_deleted": -1,
    "is_conflicted": -1,
    "mark_id": "",
    "vscode_version": "1.7.12"
  },
  {
    "project_id": "",
    "target_id": "6a8040a38c006",
    "parent_id": "6a7d19bbb8006",
    "target_type": "api",
    "name": "Create Vehicle",
    "sort": 1,
    "version": 0,
    "mark_id": "",
    "status": 1,
    "is_changed": -1,
    "is_create": -1,
    "method": "POST",
    "url": "{{baseUrl}}/vehicles",
    "request": {
      "auth": {
        "type": "inherit",
        "kv": {
          "key": "",
          "value": "",
          "in": "header"
        },
        "bearer": {
          "key": ""
        },
        "basic": {
          "username": "",
          "password": ""
        },
        "digest": {
          "username": "",
          "password": "",
          "realm": "",
          "nonce": "",
          "algorithm": "MD5",
          "qop": "",
          "nc": "",
          "cnonce": "",
          "opaque": "",
          "disableRetryRequest": false
        },
        "oauth1": {
          "consumerKey": "",
          "consumerSecret": "",
          "signatureMethod": "HMAC-SHA1",
          "addEmptyParamsToSign": true,
          "includeBodyHash": true,
          "addParamsToHeader": false,
          "realm": "",
          "version": "1.0",
          "nonce": "",
          "timestamp": "",
          "verifier": "",
          "callback": "",
          "tokenSecret": "",
          "token": "",
          "disableHeaderEncoding": false
        },
        "oauth2": {
          "addTokenTo": "header",
          "headerPrefix": "Bearer",
          "access_token": "",
          "grant_type": "password_credentials",
          "redirect_uri": "",
          "authUrl": "",
          "accessTokenUrl": "",
          "clientId": "",
          "clientSecret": "",
          "username": "",
          "password": "",
          "challengeAlgorithm": "S256",
          "code_verifier": "Bearer",
          "scope": "",
          "state": "",
          "client_authentication": "header",
          "refreshTokenUrl": "",
          "authRequestParams": [],
          "tokenRequestParams": [],
          "refreshRequestParams": []
        },
        "hawk": {
          "authId": "",
          "authKey": "",
          "algorithm": "",
          "user": "",
          "nonce": "",
          "extraData": "",
          "app": "",
          "delegation": "",
          "timestamp": "",
          "includePayloadHash": false
        },
        "awsv4": {
          "accessKey": "",
          "secretKey": "",
          "region": "",
          "service": "",
          "sessionToken": "",
          "addAuthDataToQuery": false
        },
        "ntlm": {
          "username": "",
          "password": "",
          "domain": "",
          "workstation": "",
          "disableRetryRequest": false
        },
        "edgegrid": {
          "accessToken": "",
          "clientToken": "",
          "clientSecret": "",
          "nonce": "",
          "timestamp": "",
          "baseURi": "",
          "headersToSign": ""
        },
        "noauth": {},
        "jwt": {
          "addTokenTo": "header",
          "algorithm": "HS256",
          "secret": "",
          "isSecretBase64Encoded": false,
          "payload": "",
          "headerPrefix": "Bearer",
          "queryParamKey": "token",
          "header": ""
        },
        "asap": {
          "alg": "HS256",
          "iss": "",
          "aud": "",
          "kid": "",
          "privateKey": "",
          "sub": "",
          "claims": "",
          "exp": ""
        }
      },
      "body": {
        "mode": "json",
        "parameter": [],
        "raw": "{\r\n  \"make\": \"{{$fakerjs.Vehicle.manufacturer}}\",\r\n  \"model\": \"{{$fakerjs.Vehicle.model}}\",\r\n  \"year\": {{$fakerjs.Date.between(from=1999-01-01T00:00:00-05:00,to=2020-09-14T00:00:00-05:00)|format(YYYY,--5:00)}}\r\n}",
        "raw_parameter": [],
        "raw_schema": {
          "type": "object"
        },
        "binary": null
      },
      "pre_tasks": [],
      "post_tasks": [
        {
          "type": "pickVars",
          "id": "6ad0212bb8006",
          "name": "id",
          "enabled": 1,
          "data": {
            "source": "responseJson",
            "variables": [
              {
                "param_id": "6ad041ebb8007",
                "name": "id",
                "expression": "$.id",
                "type": "globalVars"
              }
            ]
          }
        }
      ],
      "header": {
        "parameter": []
      },
      "query": {
        "parameter": [
          {
            "description": "",
            "field_type": "String",
            "is_checked": 1,
            "key": "",
            "value": "",
            "not_null": 1,
            "static": true,
            "param_id": "6acf677fb8005"
          }
        ],
        "query_add_equal": 1
      },
      "cookie": {
        "parameter": []
      },
      "restful": {
        "parameter": []
      }
    },
    "response": {
      "is_check_result": 1,
      "example": [
        {
          "example_id": "1",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Success",
            "is_default": 1,
            "code": "200",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        {
          "example_id": "2",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Failure",
            "is_default": -1,
            "code": "404",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        }
      ]
    },
    "description": "",
    "tags": [],
    "ai_expect_enable": -1,
    "is_check_result": 1,
    "is_socket": 1,
    "is_locked": -1,
    "is_force": -1,
    "attribute_info": {},
    "protocol": "http/1.1",
    "ai_expect": {
      "list": [],
      "none_math_expect_id": ""
    },
    "is_deleted": -1,
    "is_conflicted": -1,
    "vscode_version": "1.7.12"
  },
  {
    "project_id": "",
    "target_id": "6a8f258b8c007",
    "parent_id": "6a7d19bbb8006",
    "target_type": "api",
    "name": "Update Vehicle",
    "sort": 6,
    "version": 0,
    "mark_id": "",
    "status": 1,
    "is_changed": -1,
    "is_create": -1,
    "method": "PATCH",
    "url": "{{baseUrl}}/vehicles/{{id}}",
    "request": {
      "auth": {
        "type": "inherit",
        "kv": {
          "key": "",
          "value": "",
          "in": "header"
        },
        "bearer": {
          "key": ""
        },
        "basic": {
          "username": "",
          "password": ""
        },
        "digest": {
          "username": "",
          "password": "",
          "realm": "",
          "nonce": "",
          "algorithm": "MD5",
          "qop": "",
          "nc": "",
          "cnonce": "",
          "opaque": "",
          "disableRetryRequest": false
        },
        "oauth1": {
          "consumerKey": "",
          "consumerSecret": "",
          "signatureMethod": "HMAC-SHA1",
          "addEmptyParamsToSign": true,
          "includeBodyHash": true,
          "addParamsToHeader": false,
          "realm": "",
          "version": "1.0",
          "nonce": "",
          "timestamp": "",
          "verifier": "",
          "callback": "",
          "tokenSecret": "",
          "token": "",
          "disableHeaderEncoding": false
        },
        "oauth2": {
          "addTokenTo": "header",
          "headerPrefix": "Bearer",
          "access_token": "",
          "grant_type": "password_credentials",
          "redirect_uri": "",
          "authUrl": "",
          "accessTokenUrl": "",
          "clientId": "",
          "clientSecret": "",
          "username": "",
          "password": "",
          "challengeAlgorithm": "S256",
          "code_verifier": "Bearer",
          "scope": "",
          "state": "",
          "client_authentication": "header",
          "refreshTokenUrl": "",
          "authRequestParams": [],
          "tokenRequestParams": [],
          "refreshRequestParams": []
        },
        "hawk": {
          "authId": "",
          "authKey": "",
          "algorithm": "",
          "user": "",
          "nonce": "",
          "extraData": "",
          "app": "",
          "delegation": "",
          "timestamp": "",
          "includePayloadHash": false
        },
        "awsv4": {
          "accessKey": "",
          "secretKey": "",
          "region": "",
          "service": "",
          "sessionToken": "",
          "addAuthDataToQuery": false
        },
        "ntlm": {
          "username": "",
          "password": "",
          "domain": "",
          "workstation": "",
          "disableRetryRequest": false
        },
        "edgegrid": {
          "accessToken": "",
          "clientToken": "",
          "clientSecret": "",
          "nonce": "",
          "timestamp": "",
          "baseURi": "",
          "headersToSign": ""
        },
        "noauth": {},
        "jwt": {
          "addTokenTo": "header",
          "algorithm": "HS256",
          "secret": "",
          "isSecretBase64Encoded": false,
          "payload": "",
          "headerPrefix": "Bearer",
          "queryParamKey": "token",
          "header": ""
        },
        "asap": {
          "alg": "HS256",
          "iss": "",
          "aud": "",
          "kid": "",
          "privateKey": "",
          "sub": "",
          "claims": "",
          "exp": ""
        }
      },
      "body": {
        "mode": "json",
        "parameter": [],
        "raw": "{\r\n  \"year\": {{$fakerjs.Date.between(from=2020-01-01T00:00:00-05:00,to=2025-09-14T00:00:00-05:00)|format(YYYY,--5:00)}}\r\n}",
        "raw_parameter": [],
        "raw_schema": {
          "type": "object"
        },
        "binary": null
      },
      "pre_tasks": [],
      "post_tasks": [
        {
          "type": "pickVars",
          "id": "6ac7fddbb8009",
          "name": "Extract Variables",
          "enabled": 1,
          "data": {
            "source": "responseJson",
            "variables": [
              {
                "param_id": "6ac81b7fb800a",
                "name": "id",
                "expression": "$.id",
                "type": "globalVars"
              }
            ]
          }
        }
      ],
      "header": {
        "parameter": []
      },
      "query": {
        "parameter": [],
        "query_add_equal": 1
      },
      "cookie": {
        "parameter": []
      },
      "restful": {
        "parameter": []
      }
    },
    "response": {
      "is_check_result": 1,
      "example": [
        {
          "example_id": "1",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Success",
            "is_default": 1,
            "code": "200",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        {
          "example_id": "2",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Failure",
            "is_default": -1,
            "code": "404",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        }
      ]
    },
    "description": "",
    "tags": [],
    "ai_expect_enable": -1,
    "is_check_result": 1,
    "is_socket": 1,
    "is_locked": -1,
    "is_force": -1,
    "attribute_info": {},
    "protocol": "http/1.1",
    "ai_expect": {
      "list": [],
      "none_math_expect_id": ""
    },
    "is_deleted": -1,
    "is_conflicted": -1,
    "vscode_version": "1.7.12"
  },
  {
    "project_id": "",
    "target_id": "6aeaebfb8c009",
    "parent_id": "6a7d19bbb8006",
    "target_type": "api",
    "name": "One Vehicle Static",
    "sort": 4,
    "version": 0,
    "mark_id": "",
    "status": 1,
    "is_changed": -1,
    "is_create": -1,
    "method": "GET",
    "url": "{{baseUrl}}/vehicles/07741639-6494-4ff5-b3ae-a8f8f8b3f86b",
    "request": {
      "auth": {
        "type": "inherit",
        "kv": {
          "key": "",
          "value": "",
          "in": "header"
        },
        "bearer": {
          "key": ""
        },
        "basic": {
          "username": "",
          "password": ""
        },
        "digest": {
          "username": "",
          "password": "",
          "realm": "",
          "nonce": "",
          "algorithm": "MD5",
          "qop": "",
          "nc": "",
          "cnonce": "",
          "opaque": "",
          "disableRetryRequest": false
        },
        "oauth1": {
          "consumerKey": "",
          "consumerSecret": "",
          "signatureMethod": "HMAC-SHA1",
          "addEmptyParamsToSign": true,
          "includeBodyHash": true,
          "addParamsToHeader": false,
          "realm": "",
          "version": "1.0",
          "nonce": "",
          "timestamp": "",
          "verifier": "",
          "callback": "",
          "tokenSecret": "",
          "token": "",
          "disableHeaderEncoding": false
        },
        "oauth2": {
          "addTokenTo": "header",
          "headerPrefix": "Bearer",
          "access_token": "",
          "grant_type": "password_credentials",
          "redirect_uri": "",
          "authUrl": "",
          "accessTokenUrl": "",
          "clientId": "",
          "clientSecret": "",
          "username": "",
          "password": "",
          "challengeAlgorithm": "S256",
          "code_verifier": "Bearer",
          "scope": "",
          "state": "",
          "client_authentication": "header",
          "refreshTokenUrl": "",
          "authRequestParams": [],
          "tokenRequestParams": [],
          "refreshRequestParams": []
        },
        "hawk": {
          "authId": "",
          "authKey": "",
          "algorithm": "",
          "user": "",
          "nonce": "",
          "extraData": "",
          "app": "",
          "delegation": "",
          "timestamp": "",
          "includePayloadHash": false
        },
        "awsv4": {
          "accessKey": "",
          "secretKey": "",
          "region": "",
          "service": "",
          "sessionToken": "",
          "addAuthDataToQuery": false
        },
        "ntlm": {
          "username": "",
          "password": "",
          "domain": "",
          "workstation": "",
          "disableRetryRequest": false
        },
        "edgegrid": {
          "accessToken": "",
          "clientToken": "",
          "clientSecret": "",
          "nonce": "",
          "timestamp": "",
          "baseURi": "",
          "headersToSign": ""
        },
        "noauth": {},
        "jwt": {
          "addTokenTo": "header",
          "algorithm": "HS256",
          "secret": "",
          "isSecretBase64Encoded": false,
          "payload": "",
          "headerPrefix": "Bearer",
          "queryParamKey": "token",
          "header": ""
        },
        "asap": {
          "alg": "HS256",
          "iss": "",
          "aud": "",
          "kid": "",
          "privateKey": "",
          "sub": "",
          "claims": "",
          "exp": ""
        }
      },
      "body": {
        "mode": "none",
        "parameter": [],
        "raw": "",
        "raw_parameter": [],
        "raw_schema": {
          "type": "object"
        },
        "binary": null
      },
      "pre_tasks": [],
      "post_tasks": [
        {
          "type": "pickVars",
          "id": "6acc5663b801b",
          "name": "id",
          "enabled": 1,
          "data": {
            "source": "responseJson",
            "variables": [
              {
                "param_id": "6acc6bdfb801c",
                "name": "id",
                "expression": "$.id",
                "type": "globalVars"
              }
            ]
          }
        }
      ],
      "header": {
        "parameter": []
      },
      "query": {
        "parameter": [],
        "query_add_equal": 1
      },
      "cookie": {
        "parameter": []
      },
      "restful": {
        "parameter": []
      }
    },
    "response": {
      "is_check_result": 1,
      "example": [
        {
          "example_id": "1",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Success",
            "is_default": 1,
            "code": "200",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        {
          "example_id": "2",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Failure",
            "is_default": -1,
            "code": "404",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        }
      ]
    },
    "description": "",
    "tags": [],
    "ai_expect_enable": -1,
    "is_check_result": 1,
    "is_socket": 1,
    "is_locked": -1,
    "is_force": -1,
    "attribute_info": {},
    "protocol": "http/1.1",
    "ai_expect": {
      "list": [],
      "none_math_expect_id": ""
    },
    "is_deleted": -1,
    "is_conflicted": -1,
    "vscode_version": "1.7.12"
  },
  {
    "project_id": "",
    "target_id": "6c78bbc3b8005",
    "parent_id": "0",
    "target_type": "folder",
    "name": "Users",
    "sort": 2,
    "version": 0,
    "status": 1,
    "is_changed": 1,
    "is_create": 1,
    "description": "",
    "server_id": "0",
    "request": {
      "header": {
        "parameter": []
      },
      "query": {
        "parameter": []
      },
      "body": {
        "parameter": []
      },
      "cookie": {
        "parameter": []
      },
      "auth": {
        "type": "inherit",
        "kv": {
          "key": "",
          "value": "",
          "in": "header"
        },
        "bearer": {
          "key": ""
        },
        "basic": {
          "username": "",
          "password": ""
        },
        "digest": {
          "username": "",
          "password": "",
          "realm": "",
          "nonce": "",
          "algorithm": "MD5",
          "qop": "",
          "nc": "",
          "cnonce": "",
          "opaque": "",
          "disableRetryRequest": false
        },
        "oauth1": {
          "consumerKey": "",
          "consumerSecret": "",
          "signatureMethod": "HMAC-SHA1",
          "addEmptyParamsToSign": true,
          "includeBodyHash": true,
          "addParamsToHeader": false,
          "realm": "",
          "version": "1.0",
          "nonce": "",
          "timestamp": "",
          "verifier": "",
          "callback": "",
          "tokenSecret": "",
          "token": "",
          "disableHeaderEncoding": false
        },
        "oauth2": {
          "addTokenTo": "header",
          "headerPrefix": "Bearer",
          "access_token": "",
          "grant_type": "password_credentials",
          "redirect_uri": "",
          "authUrl": "",
          "accessTokenUrl": "",
          "clientId": "",
          "clientSecret": "",
          "username": "",
          "password": "",
          "challengeAlgorithm": "S256",
          "code_verifier": "Bearer",
          "scope": "",
          "state": "",
          "client_authentication": "header",
          "refreshTokenUrl": "",
          "authRequestParams": [],
          "tokenRequestParams": [],
          "refreshRequestParams": []
        },
        "hawk": {
          "authId": "",
          "authKey": "",
          "algorithm": "",
          "user": "",
          "nonce": "",
          "extraData": "",
          "app": "",
          "delegation": "",
          "timestamp": "",
          "includePayloadHash": false
        },
        "awsv4": {
          "accessKey": "",
          "secretKey": "",
          "region": "",
          "service": "",
          "sessionToken": "",
          "addAuthDataToQuery": false
        },
        "ntlm": {
          "username": "",
          "password": "",
          "domain": "",
          "workstation": "",
          "disableRetryRequest": false
        },
        "edgegrid": {
          "accessToken": "",
          "clientToken": "",
          "clientSecret": "",
          "nonce": "",
          "timestamp": "",
          "baseURi": "",
          "headersToSign": ""
        },
        "noauth": {},
        "jwt": {
          "addTokenTo": "header",
          "algorithm": "HS256",
          "secret": "",
          "isSecretBase64Encoded": false,
          "payload": "",
          "headerPrefix": "Bearer",
          "queryParamKey": "token",
          "header": ""
        },
        "asap": {
          "alg": "HS256",
          "iss": "",
          "aud": "",
          "kid": "",
          "privateKey": "",
          "sub": "",
          "claims": "",
          "exp": ""
        }
      },
      "pre_tasks": [],
      "post_tasks": []
    },
    "is_force": -1,
    "is_deleted": -1,
    "is_conflicted": -1,
    "mark_id": "",
    "vscode_version": "1.7.12"
  },
  {
    "project_id": "",
    "target_id": "6e1733db8b005",
    "parent_id": "6c78bbc3b8005",
    "target_type": "api",
    "name": "All Users",
    "sort": 2,
    "version": 0,
    "mark_id": "",
    "status": 1,
    "is_changed": -1,
    "is_create": -1,
    "method": "GET",
    "url": "{{baseUrl}}/users",
    "request": {
      "auth": {
        "type": "inherit",
        "kv": {
          "key": "",
          "value": "",
          "in": "header"
        },
        "bearer": {
          "key": ""
        },
        "basic": {
          "username": "",
          "password": ""
        },
        "digest": {
          "username": "",
          "password": "",
          "realm": "",
          "nonce": "",
          "algorithm": "MD5",
          "qop": "",
          "nc": "",
          "cnonce": "",
          "opaque": "",
          "disableRetryRequest": false
        },
        "oauth1": {
          "consumerKey": "",
          "consumerSecret": "",
          "signatureMethod": "HMAC-SHA1",
          "addEmptyParamsToSign": true,
          "includeBodyHash": true,
          "addParamsToHeader": false,
          "realm": "",
          "version": "1.0",
          "nonce": "",
          "timestamp": "",
          "verifier": "",
          "callback": "",
          "tokenSecret": "",
          "token": "",
          "disableHeaderEncoding": false
        },
        "oauth2": {
          "addTokenTo": "header",
          "headerPrefix": "Bearer",
          "access_token": "",
          "grant_type": "password_credentials",
          "redirect_uri": "",
          "authUrl": "",
          "accessTokenUrl": "",
          "clientId": "",
          "clientSecret": "",
          "username": "",
          "password": "",
          "challengeAlgorithm": "S256",
          "code_verifier": "Bearer",
          "scope": "",
          "state": "",
          "client_authentication": "header",
          "refreshTokenUrl": "",
          "authRequestParams": [],
          "tokenRequestParams": [],
          "refreshRequestParams": []
        },
        "hawk": {
          "authId": "",
          "authKey": "",
          "algorithm": "",
          "user": "",
          "nonce": "",
          "extraData": "",
          "app": "",
          "delegation": "",
          "timestamp": "",
          "includePayloadHash": false
        },
        "awsv4": {
          "accessKey": "",
          "secretKey": "",
          "region": "",
          "service": "",
          "sessionToken": "",
          "addAuthDataToQuery": false
        },
        "ntlm": {
          "username": "",
          "password": "",
          "domain": "",
          "workstation": "",
          "disableRetryRequest": false
        },
        "edgegrid": {
          "accessToken": "",
          "clientToken": "",
          "clientSecret": "",
          "nonce": "",
          "timestamp": "",
          "baseURi": "",
          "headersToSign": ""
        },
        "noauth": {},
        "jwt": {
          "addTokenTo": "header",
          "algorithm": "HS256",
          "secret": "",
          "isSecretBase64Encoded": false,
          "payload": "",
          "headerPrefix": "Bearer",
          "queryParamKey": "token",
          "header": ""
        },
        "asap": {
          "alg": "HS256",
          "iss": "",
          "aud": "",
          "kid": "",
          "privateKey": "",
          "sub": "",
          "claims": "",
          "exp": ""
        }
      },
      "body": {
        "mode": "none",
        "parameter": [],
        "raw": "",
        "raw_parameter": [],
        "raw_schema": {
          "type": "object"
        },
        "binary": null
      },
      "pre_tasks": [],
      "post_tasks": [],
      "header": {
        "parameter": []
      },
      "query": {
        "parameter": [],
        "query_add_equal": 1
      },
      "cookie": {
        "parameter": []
      },
      "restful": {
        "parameter": []
      }
    },
    "response": {
      "is_check_result": 1,
      "example": [
        {
          "example_id": "1",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Success",
            "is_default": 1,
            "code": "200",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        {
          "example_id": "2",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Failure",
            "is_default": -1,
            "code": "404",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        }
      ]
    },
    "description": "",
    "tags": [],
    "ai_expect_enable": -1,
    "is_check_result": 1,
    "is_socket": 1,
    "is_locked": -1,
    "is_force": -1,
    "attribute_info": {},
    "protocol": "http/1.1",
    "ai_expect": {
      "list": [],
      "none_math_expect_id": ""
    },
    "is_deleted": -1,
    "is_conflicted": -1,
    "vscode_version": "1.7.12"
  },
  {
    "project_id": "",
    "target_id": "6e19cd138b006",
    "parent_id": "6a7d19bbb8006",
    "target_type": "api",
    "name": "Delete Vehicle",
    "sort": 7,
    "version": 0,
    "mark_id": "",
    "status": 1,
    "is_changed": -1,
    "is_create": -1,
    "method": "DELETE",
    "url": "{{baseUrl}}/vehicles/{{id}}",
    "request": {
      "auth": {
        "type": "inherit",
        "kv": {
          "key": "",
          "value": "",
          "in": "header"
        },
        "bearer": {
          "key": ""
        },
        "basic": {
          "username": "",
          "password": ""
        },
        "digest": {
          "username": "",
          "password": "",
          "realm": "",
          "nonce": "",
          "algorithm": "MD5",
          "qop": "",
          "nc": "",
          "cnonce": "",
          "opaque": "",
          "disableRetryRequest": false
        },
        "oauth1": {
          "consumerKey": "",
          "consumerSecret": "",
          "signatureMethod": "HMAC-SHA1",
          "addEmptyParamsToSign": true,
          "includeBodyHash": true,
          "addParamsToHeader": false,
          "realm": "",
          "version": "1.0",
          "nonce": "",
          "timestamp": "",
          "verifier": "",
          "callback": "",
          "tokenSecret": "",
          "token": "",
          "disableHeaderEncoding": false
        },
        "oauth2": {
          "addTokenTo": "header",
          "headerPrefix": "Bearer",
          "access_token": "",
          "grant_type": "password_credentials",
          "redirect_uri": "",
          "authUrl": "",
          "accessTokenUrl": "",
          "clientId": "",
          "clientSecret": "",
          "username": "",
          "password": "",
          "challengeAlgorithm": "S256",
          "code_verifier": "Bearer",
          "scope": "",
          "state": "",
          "client_authentication": "header",
          "refreshTokenUrl": "",
          "authRequestParams": [],
          "tokenRequestParams": [],
          "refreshRequestParams": []
        },
        "hawk": {
          "authId": "",
          "authKey": "",
          "algorithm": "",
          "user": "",
          "nonce": "",
          "extraData": "",
          "app": "",
          "delegation": "",
          "timestamp": "",
          "includePayloadHash": false
        },
        "awsv4": {
          "accessKey": "",
          "secretKey": "",
          "region": "",
          "service": "",
          "sessionToken": "",
          "addAuthDataToQuery": false
        },
        "ntlm": {
          "username": "",
          "password": "",
          "domain": "",
          "workstation": "",
          "disableRetryRequest": false
        },
        "edgegrid": {
          "accessToken": "",
          "clientToken": "",
          "clientSecret": "",
          "nonce": "",
          "timestamp": "",
          "baseURi": "",
          "headersToSign": ""
        },
        "noauth": {},
        "jwt": {
          "addTokenTo": "header",
          "algorithm": "HS256",
          "secret": "",
          "isSecretBase64Encoded": false,
          "payload": "",
          "headerPrefix": "Bearer",
          "queryParamKey": "token",
          "header": ""
        },
        "asap": {
          "alg": "HS256",
          "iss": "",
          "aud": "",
          "kid": "",
          "privateKey": "",
          "sub": "",
          "claims": "",
          "exp": ""
        }
      },
      "body": {
        "mode": "json",
        "parameter": [],
        "raw": "",
        "raw_parameter": [],
        "raw_schema": {
          "type": "object"
        },
        "binary": null
      },
      "pre_tasks": [],
      "post_tasks": [
        {
          "type": "pickVars",
          "id": "6ac7fddbb8009",
          "name": "Extract Variables",
          "enabled": -1,
          "data": {
            "source": "responseJson",
            "variables": [
              {
                "param_id": "6ac81b7fb800a",
                "name": "id",
                "expression": "",
                "type": "envVars",
                "static": true
              }
            ]
          }
        }
      ],
      "header": {
        "parameter": []
      },
      "query": {
        "parameter": [],
        "query_add_equal": 1
      },
      "cookie": {
        "parameter": []
      },
      "restful": {
        "parameter": []
      }
    },
    "response": {
      "is_check_result": 1,
      "example": [
        {
          "example_id": "1",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Success",
            "is_default": 1,
            "code": "200",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        {
          "example_id": "2",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Failure",
            "is_default": -1,
            "code": "404",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        }
      ]
    },
    "description": "",
    "tags": [],
    "ai_expect_enable": -1,
    "is_check_result": 1,
    "is_socket": 1,
    "is_locked": -1,
    "is_force": -1,
    "attribute_info": {},
    "protocol": "http/1.1",
    "ai_expect": {
      "list": [],
      "none_math_expect_id": ""
    },
    "is_deleted": -1,
    "is_conflicted": -1,
    "vscode_version": "1.7.12"
  },
  {
    "project_id": "",
    "target_id": "6e1f691f8b007",
    "parent_id": "6c78bbc3b8005",
    "target_type": "api",
    "name": "Create User",
    "sort": 1,
    "version": 0,
    "mark_id": "",
    "status": 1,
    "is_changed": -1,
    "is_create": -1,
    "method": "POST",
    "url": "{{baseUrl}}/users",
    "request": {
      "auth": {
        "type": "inherit",
        "kv": {
          "key": "",
          "value": "",
          "in": "header"
        },
        "bearer": {
          "key": ""
        },
        "basic": {
          "username": "",
          "password": ""
        },
        "digest": {
          "username": "",
          "password": "",
          "realm": "",
          "nonce": "",
          "algorithm": "MD5",
          "qop": "",
          "nc": "",
          "cnonce": "",
          "opaque": "",
          "disableRetryRequest": false
        },
        "oauth1": {
          "consumerKey": "",
          "consumerSecret": "",
          "signatureMethod": "HMAC-SHA1",
          "addEmptyParamsToSign": true,
          "includeBodyHash": true,
          "addParamsToHeader": false,
          "realm": "",
          "version": "1.0",
          "nonce": "",
          "timestamp": "",
          "verifier": "",
          "callback": "",
          "tokenSecret": "",
          "token": "",
          "disableHeaderEncoding": false
        },
        "oauth2": {
          "addTokenTo": "header",
          "headerPrefix": "Bearer",
          "access_token": "",
          "grant_type": "password_credentials",
          "redirect_uri": "",
          "authUrl": "",
          "accessTokenUrl": "",
          "clientId": "",
          "clientSecret": "",
          "username": "",
          "password": "",
          "challengeAlgorithm": "S256",
          "code_verifier": "Bearer",
          "scope": "",
          "state": "",
          "client_authentication": "header",
          "refreshTokenUrl": "",
          "authRequestParams": [],
          "tokenRequestParams": [],
          "refreshRequestParams": []
        },
        "hawk": {
          "authId": "",
          "authKey": "",
          "algorithm": "",
          "user": "",
          "nonce": "",
          "extraData": "",
          "app": "",
          "delegation": "",
          "timestamp": "",
          "includePayloadHash": false
        },
        "awsv4": {
          "accessKey": "",
          "secretKey": "",
          "region": "",
          "service": "",
          "sessionToken": "",
          "addAuthDataToQuery": false
        },
        "ntlm": {
          "username": "",
          "password": "",
          "domain": "",
          "workstation": "",
          "disableRetryRequest": false
        },
        "edgegrid": {
          "accessToken": "",
          "clientToken": "",
          "clientSecret": "",
          "nonce": "",
          "timestamp": "",
          "baseURi": "",
          "headersToSign": ""
        },
        "noauth": {},
        "jwt": {
          "addTokenTo": "header",
          "algorithm": "HS256",
          "secret": "",
          "isSecretBase64Encoded": false,
          "payload": "",
          "headerPrefix": "Bearer",
          "queryParamKey": "token",
          "header": ""
        },
        "asap": {
          "alg": "HS256",
          "iss": "",
          "aud": "",
          "kid": "",
          "privateKey": "",
          "sub": "",
          "claims": "",
          "exp": ""
        }
      },
      "body": {
        "mode": "json",
        "parameter": [],
        "raw": "{\r\n  \"firstName\": \"{{$fakerjs.Person.firstName}}\",\r\n  \"lastName\": \"{{$fakerjs.Person.lastName}}\",\r\n  \"email\": \"{{$fakerjs.Internet.email}}\",\r\n  \"password\": \"{{$fakerjs.Internet.password}}\",\r\n  \"role\": \"cliente\"\r\n}\r\n",
        "raw_parameter": [],
        "raw_schema": {
          "type": "object"
        },
        "binary": null
      },
      "pre_tasks": [],
      "post_tasks": [
        {
          "type": "pickVars",
          "id": "6ad0212bb8006",
          "name": "id",
          "enabled": 1,
          "data": {
            "source": "responseJson",
            "variables": [
              {
                "param_id": "6ad041ebb8007",
                "name": "id",
                "expression": "$.id",
                "type": "globalVars"
              }
            ]
          }
        }
      ],
      "header": {
        "parameter": []
      },
      "query": {
        "parameter": [],
        "query_add_equal": 1
      },
      "cookie": {
        "parameter": []
      },
      "restful": {
        "parameter": []
      }
    },
    "response": {
      "is_check_result": 1,
      "example": [
        {
          "example_id": "1",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Success",
            "is_default": 1,
            "code": "200",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        {
          "example_id": "2",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Failure",
            "is_default": -1,
            "code": "404",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        }
      ]
    },
    "description": "",
    "tags": [],
    "ai_expect_enable": -1,
    "is_check_result": 1,
    "is_socket": 1,
    "is_locked": -1,
    "is_force": -1,
    "attribute_info": {},
    "protocol": "http/1.1",
    "ai_expect": {
      "list": [],
      "none_math_expect_id": ""
    },
    "is_deleted": -1,
    "is_conflicted": -1,
    "vscode_version": "1.7.12"
  },
  {
    "project_id": "",
    "target_id": "6e1f94a78b008",
    "parent_id": "6c78bbc3b8005",
    "target_type": "api",
    "name": "One User Static",
    "sort": 3,
    "version": 0,
    "mark_id": "",
    "status": 1,
    "is_changed": -1,
    "is_create": -1,
    "method": "GET",
    "url": "{{baseUrl}}/users/176c2df6-fa8a-4616-a05c-fce4b0677c02",
    "request": {
      "auth": {
        "type": "inherit",
        "kv": {
          "key": "",
          "value": "",
          "in": "header"
        },
        "bearer": {
          "key": ""
        },
        "basic": {
          "username": "",
          "password": ""
        },
        "digest": {
          "username": "",
          "password": "",
          "realm": "",
          "nonce": "",
          "algorithm": "MD5",
          "qop": "",
          "nc": "",
          "cnonce": "",
          "opaque": "",
          "disableRetryRequest": false
        },
        "oauth1": {
          "consumerKey": "",
          "consumerSecret": "",
          "signatureMethod": "HMAC-SHA1",
          "addEmptyParamsToSign": true,
          "includeBodyHash": true,
          "addParamsToHeader": false,
          "realm": "",
          "version": "1.0",
          "nonce": "",
          "timestamp": "",
          "verifier": "",
          "callback": "",
          "tokenSecret": "",
          "token": "",
          "disableHeaderEncoding": false
        },
        "oauth2": {
          "addTokenTo": "header",
          "headerPrefix": "Bearer",
          "access_token": "",
          "grant_type": "password_credentials",
          "redirect_uri": "",
          "authUrl": "",
          "accessTokenUrl": "",
          "clientId": "",
          "clientSecret": "",
          "username": "",
          "password": "",
          "challengeAlgorithm": "S256",
          "code_verifier": "Bearer",
          "scope": "",
          "state": "",
          "client_authentication": "header",
          "refreshTokenUrl": "",
          "authRequestParams": [],
          "tokenRequestParams": [],
          "refreshRequestParams": []
        },
        "hawk": {
          "authId": "",
          "authKey": "",
          "algorithm": "",
          "user": "",
          "nonce": "",
          "extraData": "",
          "app": "",
          "delegation": "",
          "timestamp": "",
          "includePayloadHash": false
        },
        "awsv4": {
          "accessKey": "",
          "secretKey": "",
          "region": "",
          "service": "",
          "sessionToken": "",
          "addAuthDataToQuery": false
        },
        "ntlm": {
          "username": "",
          "password": "",
          "domain": "",
          "workstation": "",
          "disableRetryRequest": false
        },
        "edgegrid": {
          "accessToken": "",
          "clientToken": "",
          "clientSecret": "",
          "nonce": "",
          "timestamp": "",
          "baseURi": "",
          "headersToSign": ""
        },
        "noauth": {},
        "jwt": {
          "addTokenTo": "header",
          "algorithm": "HS256",
          "secret": "",
          "isSecretBase64Encoded": false,
          "payload": "",
          "headerPrefix": "Bearer",
          "queryParamKey": "token",
          "header": ""
        },
        "asap": {
          "alg": "HS256",
          "iss": "",
          "aud": "",
          "kid": "",
          "privateKey": "",
          "sub": "",
          "claims": "",
          "exp": ""
        }
      },
      "body": {
        "mode": "none",
        "parameter": [],
        "raw": "",
        "raw_parameter": [],
        "raw_schema": {
          "type": "object"
        },
        "binary": null
      },
      "pre_tasks": [],
      "post_tasks": [
        {
          "type": "pickVars",
          "id": "6acc5663b801b",
          "name": "id",
          "enabled": 1,
          "data": {
            "source": "responseJson",
            "variables": [
              {
                "param_id": "6acc6bdfb801c",
                "name": "id",
                "expression": "$.id",
                "type": "globalVars"
              }
            ]
          }
        }
      ],
      "header": {
        "parameter": []
      },
      "query": {
        "parameter": [],
        "query_add_equal": 1
      },
      "cookie": {
        "parameter": []
      },
      "restful": {
        "parameter": []
      }
    },
    "response": {
      "is_check_result": 1,
      "example": [
        {
          "example_id": "1",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Success",
            "is_default": 1,
            "code": "200",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        {
          "example_id": "2",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Failure",
            "is_default": -1,
            "code": "404",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        }
      ]
    },
    "description": "",
    "tags": [],
    "ai_expect_enable": -1,
    "is_check_result": 1,
    "is_socket": 1,
    "is_locked": -1,
    "is_force": -1,
    "attribute_info": {},
    "protocol": "http/1.1",
    "ai_expect": {
      "list": [],
      "none_math_expect_id": ""
    },
    "is_deleted": -1,
    "is_conflicted": -1,
    "vscode_version": "1.7.12"
  },
  {
    "project_id": "",
    "target_id": "6e1ff59f8b00a",
    "parent_id": "6c78bbc3b8005",
    "target_type": "api",
    "name": "One User",
    "sort": 4,
    "version": 0,
    "mark_id": "",
    "status": 1,
    "is_changed": -1,
    "is_create": -1,
    "method": "GET",
    "url": "{{baseUrl}}/users/{{id}}",
    "request": {
      "auth": {
        "type": "inherit",
        "kv": {
          "key": "",
          "value": "",
          "in": "header"
        },
        "bearer": {
          "key": ""
        },
        "basic": {
          "username": "",
          "password": ""
        },
        "digest": {
          "username": "",
          "password": "",
          "realm": "",
          "nonce": "",
          "algorithm": "MD5",
          "qop": "",
          "nc": "",
          "cnonce": "",
          "opaque": "",
          "disableRetryRequest": false
        },
        "oauth1": {
          "consumerKey": "",
          "consumerSecret": "",
          "signatureMethod": "HMAC-SHA1",
          "addEmptyParamsToSign": true,
          "includeBodyHash": true,
          "addParamsToHeader": false,
          "realm": "",
          "version": "1.0",
          "nonce": "",
          "timestamp": "",
          "verifier": "",
          "callback": "",
          "tokenSecret": "",
          "token": "",
          "disableHeaderEncoding": false
        },
        "oauth2": {
          "addTokenTo": "header",
          "headerPrefix": "Bearer",
          "access_token": "",
          "grant_type": "password_credentials",
          "redirect_uri": "",
          "authUrl": "",
          "accessTokenUrl": "",
          "clientId": "",
          "clientSecret": "",
          "username": "",
          "password": "",
          "challengeAlgorithm": "S256",
          "code_verifier": "Bearer",
          "scope": "",
          "state": "",
          "client_authentication": "header",
          "refreshTokenUrl": "",
          "authRequestParams": [],
          "tokenRequestParams": [],
          "refreshRequestParams": []
        },
        "hawk": {
          "authId": "",
          "authKey": "",
          "algorithm": "",
          "user": "",
          "nonce": "",
          "extraData": "",
          "app": "",
          "delegation": "",
          "timestamp": "",
          "includePayloadHash": false
        },
        "awsv4": {
          "accessKey": "",
          "secretKey": "",
          "region": "",
          "service": "",
          "sessionToken": "",
          "addAuthDataToQuery": false
        },
        "ntlm": {
          "username": "",
          "password": "",
          "domain": "",
          "workstation": "",
          "disableRetryRequest": false
        },
        "edgegrid": {
          "accessToken": "",
          "clientToken": "",
          "clientSecret": "",
          "nonce": "",
          "timestamp": "",
          "baseURi": "",
          "headersToSign": ""
        },
        "noauth": {},
        "jwt": {
          "addTokenTo": "header",
          "algorithm": "HS256",
          "secret": "",
          "isSecretBase64Encoded": false,
          "payload": "",
          "headerPrefix": "Bearer",
          "queryParamKey": "token",
          "header": ""
        },
        "asap": {
          "alg": "HS256",
          "iss": "",
          "aud": "",
          "kid": "",
          "privateKey": "",
          "sub": "",
          "claims": "",
          "exp": ""
        }
      },
      "body": {
        "mode": "none",
        "parameter": [],
        "raw": "",
        "raw_parameter": [],
        "raw_schema": {
          "type": "object"
        },
        "binary": null
      },
      "pre_tasks": [],
      "post_tasks": [
        {
          "type": "pickVars",
          "id": "6acc5663b801b",
          "name": "id",
          "enabled": 1,
          "data": {
            "source": "responseJson",
            "variables": [
              {
                "param_id": "6acc6bdfb801c",
                "name": "id",
                "expression": "$.id",
                "type": "globalVars"
              },
              {
                "param_id": "6e68d277b8007",
                "name": "",
                "expression": "",
                "static": true
              }
            ]
          }
        }
      ],
      "header": {
        "parameter": []
      },
      "query": {
        "parameter": [],
        "query_add_equal": 1
      },
      "cookie": {
        "parameter": []
      },
      "restful": {
        "parameter": []
      }
    },
    "response": {
      "is_check_result": 1,
      "example": [
        {
          "example_id": "1",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Success",
            "is_default": 1,
            "code": "200",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        {
          "example_id": "2",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Failure",
            "is_default": -1,
            "code": "404",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        }
      ]
    },
    "description": "",
    "tags": [],
    "ai_expect_enable": -1,
    "is_check_result": 1,
    "is_socket": 1,
    "is_locked": -1,
    "is_force": -1,
    "attribute_info": {},
    "protocol": "http/1.1",
    "ai_expect": {
      "list": [],
      "none_math_expect_id": ""
    },
    "is_deleted": -1,
    "is_conflicted": -1,
    "vscode_version": "1.7.12"
  },
  {
    "project_id": "",
    "target_id": "6e2048bb8b00b",
    "parent_id": "6c78bbc3b8005",
    "target_type": "api",
    "name": "Update Users",
    "sort": 5,
    "version": 0,
    "mark_id": "",
    "status": 1,
    "is_changed": -1,
    "is_create": -1,
    "method": "PATCH",
    "url": "{{baseUrl}}/users/{{id}}",
    "request": {
      "auth": {
        "type": "inherit",
        "kv": {
          "key": "",
          "value": "",
          "in": "header"
        },
        "bearer": {
          "key": ""
        },
        "basic": {
          "username": "",
          "password": ""
        },
        "digest": {
          "username": "",
          "password": "",
          "realm": "",
          "nonce": "",
          "algorithm": "MD5",
          "qop": "",
          "nc": "",
          "cnonce": "",
          "opaque": "",
          "disableRetryRequest": false
        },
        "oauth1": {
          "consumerKey": "",
          "consumerSecret": "",
          "signatureMethod": "HMAC-SHA1",
          "addEmptyParamsToSign": true,
          "includeBodyHash": true,
          "addParamsToHeader": false,
          "realm": "",
          "version": "1.0",
          "nonce": "",
          "timestamp": "",
          "verifier": "",
          "callback": "",
          "tokenSecret": "",
          "token": "",
          "disableHeaderEncoding": false
        },
        "oauth2": {
          "addTokenTo": "header",
          "headerPrefix": "Bearer",
          "access_token": "",
          "grant_type": "password_credentials",
          "redirect_uri": "",
          "authUrl": "",
          "accessTokenUrl": "",
          "clientId": "",
          "clientSecret": "",
          "username": "",
          "password": "",
          "challengeAlgorithm": "S256",
          "code_verifier": "Bearer",
          "scope": "",
          "state": "",
          "client_authentication": "header",
          "refreshTokenUrl": "",
          "authRequestParams": [],
          "tokenRequestParams": [],
          "refreshRequestParams": []
        },
        "hawk": {
          "authId": "",
          "authKey": "",
          "algorithm": "",
          "user": "",
          "nonce": "",
          "extraData": "",
          "app": "",
          "delegation": "",
          "timestamp": "",
          "includePayloadHash": false
        },
        "awsv4": {
          "accessKey": "",
          "secretKey": "",
          "region": "",
          "service": "",
          "sessionToken": "",
          "addAuthDataToQuery": false
        },
        "ntlm": {
          "username": "",
          "password": "",
          "domain": "",
          "workstation": "",
          "disableRetryRequest": false
        },
        "edgegrid": {
          "accessToken": "",
          "clientToken": "",
          "clientSecret": "",
          "nonce": "",
          "timestamp": "",
          "baseURi": "",
          "headersToSign": ""
        },
        "noauth": {},
        "jwt": {
          "addTokenTo": "header",
          "algorithm": "HS256",
          "secret": "",
          "isSecretBase64Encoded": false,
          "payload": "",
          "headerPrefix": "Bearer",
          "queryParamKey": "token",
          "header": ""
        },
        "asap": {
          "alg": "HS256",
          "iss": "",
          "aud": "",
          "kid": "",
          "privateKey": "",
          "sub": "",
          "claims": "",
          "exp": ""
        }
      },
      "body": {
        "mode": "json",
        "parameter": [],
        "raw": "{\r\n  \"firstName\": \"{{$fakerjs.Person.firstName}}\",\r\n  \"lastName\": \"{{$fakerjs.Person.lastName}}\"\r\n}",
        "raw_parameter": [],
        "raw_schema": {
          "type": "object"
        },
        "binary": null
      },
      "pre_tasks": [],
      "post_tasks": [
        {
          "type": "pickVars",
          "id": "6ac7fddbb8009",
          "name": "Extract Variables",
          "enabled": 1,
          "data": {
            "source": "responseJson",
            "variables": [
              {
                "param_id": "6ac81b7fb800a",
                "name": "id",
                "expression": "",
                "type": "envVars",
                "static": true
              }
            ]
          }
        }
      ],
      "header": {
        "parameter": []
      },
      "query": {
        "parameter": [],
        "query_add_equal": 1
      },
      "cookie": {
        "parameter": []
      },
      "restful": {
        "parameter": []
      }
    },
    "response": {
      "is_check_result": 1,
      "example": [
        {
          "example_id": "1",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Success",
            "is_default": 1,
            "code": "200",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        {
          "example_id": "2",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Failure",
            "is_default": -1,
            "code": "404",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        }
      ]
    },
    "description": "",
    "tags": [],
    "ai_expect_enable": -1,
    "is_check_result": 1,
    "is_socket": 1,
    "is_locked": -1,
    "is_force": -1,
    "attribute_info": {},
    "protocol": "http/1.1",
    "ai_expect": {
      "list": [],
      "none_math_expect_id": ""
    },
    "is_deleted": -1,
    "is_conflicted": -1,
    "vscode_version": "1.7.12"
  },
  {
    "project_id": "",
    "target_id": "6e20776f8b00c",
    "parent_id": "6c78bbc3b8005",
    "target_type": "api",
    "name": "Delete User",
    "sort": 6,
    "version": 0,
    "mark_id": "",
    "status": 1,
    "is_changed": -1,
    "is_create": -1,
    "method": "DELETE",
    "url": "{{baseUrl}}/users/{{id}}",
    "request": {
      "auth": {
        "type": "inherit",
        "kv": {
          "key": "",
          "value": "",
          "in": "header"
        },
        "bearer": {
          "key": ""
        },
        "basic": {
          "username": "",
          "password": ""
        },
        "digest": {
          "username": "",
          "password": "",
          "realm": "",
          "nonce": "",
          "algorithm": "MD5",
          "qop": "",
          "nc": "",
          "cnonce": "",
          "opaque": "",
          "disableRetryRequest": false
        },
        "oauth1": {
          "consumerKey": "",
          "consumerSecret": "",
          "signatureMethod": "HMAC-SHA1",
          "addEmptyParamsToSign": true,
          "includeBodyHash": true,
          "addParamsToHeader": false,
          "realm": "",
          "version": "1.0",
          "nonce": "",
          "timestamp": "",
          "verifier": "",
          "callback": "",
          "tokenSecret": "",
          "token": "",
          "disableHeaderEncoding": false
        },
        "oauth2": {
          "addTokenTo": "header",
          "headerPrefix": "Bearer",
          "access_token": "",
          "grant_type": "password_credentials",
          "redirect_uri": "",
          "authUrl": "",
          "accessTokenUrl": "",
          "clientId": "",
          "clientSecret": "",
          "username": "",
          "password": "",
          "challengeAlgorithm": "S256",
          "code_verifier": "Bearer",
          "scope": "",
          "state": "",
          "client_authentication": "header",
          "refreshTokenUrl": "",
          "authRequestParams": [],
          "tokenRequestParams": [],
          "refreshRequestParams": []
        },
        "hawk": {
          "authId": "",
          "authKey": "",
          "algorithm": "",
          "user": "",
          "nonce": "",
          "extraData": "",
          "app": "",
          "delegation": "",
          "timestamp": "",
          "includePayloadHash": false
        },
        "awsv4": {
          "accessKey": "",
          "secretKey": "",
          "region": "",
          "service": "",
          "sessionToken": "",
          "addAuthDataToQuery": false
        },
        "ntlm": {
          "username": "",
          "password": "",
          "domain": "",
          "workstation": "",
          "disableRetryRequest": false
        },
        "edgegrid": {
          "accessToken": "",
          "clientToken": "",
          "clientSecret": "",
          "nonce": "",
          "timestamp": "",
          "baseURi": "",
          "headersToSign": ""
        },
        "noauth": {},
        "jwt": {
          "addTokenTo": "header",
          "algorithm": "HS256",
          "secret": "",
          "isSecretBase64Encoded": false,
          "payload": "",
          "headerPrefix": "Bearer",
          "queryParamKey": "token",
          "header": ""
        },
        "asap": {
          "alg": "HS256",
          "iss": "",
          "aud": "",
          "kid": "",
          "privateKey": "",
          "sub": "",
          "claims": "",
          "exp": ""
        }
      },
      "body": {
        "mode": "json",
        "parameter": [],
        "raw": "",
        "raw_parameter": [],
        "raw_schema": {
          "type": "object"
        },
        "binary": null
      },
      "pre_tasks": [],
      "post_tasks": [
        {
          "type": "pickVars",
          "id": "6ac7fddbb8009",
          "name": "Extract Variables",
          "enabled": -1,
          "data": {
            "source": "responseJson",
            "variables": [
              {
                "param_id": "6ac81b7fb800a",
                "name": "id",
                "expression": "",
                "type": "envVars",
                "static": true
              }
            ]
          }
        }
      ],
      "header": {
        "parameter": []
      },
      "query": {
        "parameter": [],
        "query_add_equal": 1
      },
      "cookie": {
        "parameter": []
      },
      "restful": {
        "parameter": []
      }
    },
    "response": {
      "is_check_result": 1,
      "example": [
        {
          "example_id": "1",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Success",
            "is_default": 1,
            "code": "200",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        {
          "example_id": "2",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Failure",
            "is_default": -1,
            "code": "404",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        }
      ]
    },
    "description": "",
    "tags": [],
    "ai_expect_enable": -1,
    "is_check_result": 1,
    "is_socket": 1,
    "is_locked": -1,
    "is_force": -1,
    "attribute_info": {},
    "protocol": "http/1.1",
    "ai_expect": {
      "list": [],
      "none_math_expect_id": ""
    },
    "is_deleted": -1,
    "is_conflicted": -1,
    "vscode_version": "1.7.12"
  },
  {
    "project_id": "",
    "target_id": "6f3f28ab65005",
    "parent_id": "6a7d19bbb8006",
    "target_type": "api",
    "name": "Pagination Vehicles",
    "sort": 3,
    "version": 0,
    "mark_id": "",
    "status": 1,
    "is_changed": -1,
    "is_create": -1,
    "method": "GET",
    "url": "{{baseUrl}}/vehicles?limit=2&offset=",
    "request": {
      "auth": {
        "type": "inherit",
        "kv": {
          "key": "",
          "value": "",
          "in": "header"
        },
        "bearer": {
          "key": ""
        },
        "basic": {
          "username": "",
          "password": ""
        },
        "digest": {
          "username": "",
          "password": "",
          "realm": "",
          "nonce": "",
          "algorithm": "MD5",
          "qop": "",
          "nc": "",
          "cnonce": "",
          "opaque": "",
          "disableRetryRequest": false
        },
        "oauth1": {
          "consumerKey": "",
          "consumerSecret": "",
          "signatureMethod": "HMAC-SHA1",
          "addEmptyParamsToSign": true,
          "includeBodyHash": true,
          "addParamsToHeader": false,
          "realm": "",
          "version": "1.0",
          "nonce": "",
          "timestamp": "",
          "verifier": "",
          "callback": "",
          "tokenSecret": "",
          "token": "",
          "disableHeaderEncoding": false
        },
        "oauth2": {
          "addTokenTo": "header",
          "headerPrefix": "Bearer",
          "access_token": "",
          "grant_type": "password_credentials",
          "redirect_uri": "",
          "authUrl": "",
          "accessTokenUrl": "",
          "clientId": "",
          "clientSecret": "",
          "username": "",
          "password": "",
          "challengeAlgorithm": "S256",
          "code_verifier": "Bearer",
          "scope": "",
          "state": "",
          "client_authentication": "header",
          "refreshTokenUrl": "",
          "authRequestParams": [],
          "tokenRequestParams": [],
          "refreshRequestParams": []
        },
        "hawk": {
          "authId": "",
          "authKey": "",
          "algorithm": "",
          "user": "",
          "nonce": "",
          "extraData": "",
          "app": "",
          "delegation": "",
          "timestamp": "",
          "includePayloadHash": false
        },
        "awsv4": {
          "accessKey": "",
          "secretKey": "",
          "region": "",
          "service": "",
          "sessionToken": "",
          "addAuthDataToQuery": false
        },
        "ntlm": {
          "username": "",
          "password": "",
          "domain": "",
          "workstation": "",
          "disableRetryRequest": false
        },
        "edgegrid": {
          "accessToken": "",
          "clientToken": "",
          "clientSecret": "",
          "nonce": "",
          "timestamp": "",
          "baseURi": "",
          "headersToSign": ""
        },
        "noauth": {},
        "jwt": {
          "addTokenTo": "header",
          "algorithm": "HS256",
          "secret": "",
          "isSecretBase64Encoded": false,
          "payload": "",
          "headerPrefix": "Bearer",
          "queryParamKey": "token",
          "header": ""
        },
        "asap": {
          "alg": "HS256",
          "iss": "",
          "aud": "",
          "kid": "",
          "privateKey": "",
          "sub": "",
          "claims": "",
          "exp": ""
        }
      },
      "body": {
        "mode": "none",
        "parameter": [],
        "raw": "",
        "raw_parameter": [],
        "raw_schema": {
          "type": "object"
        },
        "binary": null
      },
      "pre_tasks": [],
      "post_tasks": [],
      "header": {
        "parameter": []
      },
      "query": {
        "parameter": [
          {
            "description": "",
            "field_type": "String",
            "is_checked": 1,
            "key": "limit",
            "value": "2",
            "not_null": 1,
            "param_id": "6f3f65b3b8005"
          },
          {
            "description": "",
            "field_type": "String",
            "is_checked": 1,
            "key": "offset",
            "value": "",
            "not_null": 1,
            "param_id": "6f40cdbfb8006"
          }
        ],
        "query_add_equal": 1
      },
      "cookie": {
        "parameter": []
      },
      "restful": {
        "parameter": []
      }
    },
    "response": {
      "is_check_result": 1,
      "example": [
        {
          "example_id": "1",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Success",
            "is_default": 1,
            "code": "200",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        {
          "example_id": "2",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Failure",
            "is_default": -1,
            "code": "404",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        }
      ]
    },
    "description": "",
    "tags": [],
    "ai_expect_enable": -1,
    "is_check_result": 1,
    "is_socket": 1,
    "is_locked": -1,
    "is_force": -1,
    "attribute_info": {},
    "protocol": "http/1.1",
    "ai_expect": {
      "list": [],
      "none_math_expect_id": ""
    },
    "is_deleted": -1,
    "is_conflicted": -1,
    "vscode_version": "1.7.12"
  },
  {
    "project_id": "",
    "target_id": "81c32e4fb8005",
    "parent_id": "0",
    "target_type": "folder",
    "name": "Products",
    "sort": 3,
    "version": 0,
    "status": 1,
    "is_changed": 1,
    "is_create": 1,
    "description": "",
    "server_id": "0",
    "request": {
      "header": {
        "parameter": []
      },
      "query": {
        "parameter": []
      },
      "body": {
        "parameter": []
      },
      "cookie": {
        "parameter": []
      },
      "auth": {
        "type": "inherit",
        "kv": {
          "key": "",
          "value": "",
          "in": "header"
        },
        "bearer": {
          "key": ""
        },
        "basic": {
          "username": "",
          "password": ""
        },
        "digest": {
          "username": "",
          "password": "",
          "realm": "",
          "nonce": "",
          "algorithm": "MD5",
          "qop": "",
          "nc": "",
          "cnonce": "",
          "opaque": "",
          "disableRetryRequest": false
        },
        "oauth1": {
          "consumerKey": "",
          "consumerSecret": "",
          "signatureMethod": "HMAC-SHA1",
          "addEmptyParamsToSign": true,
          "includeBodyHash": true,
          "addParamsToHeader": false,
          "realm": "",
          "version": "1.0",
          "nonce": "",
          "timestamp": "",
          "verifier": "",
          "callback": "",
          "tokenSecret": "",
          "token": "",
          "disableHeaderEncoding": false
        },
        "oauth2": {
          "addTokenTo": "header",
          "headerPrefix": "Bearer",
          "access_token": "",
          "grant_type": "password_credentials",
          "redirect_uri": "",
          "authUrl": "",
          "accessTokenUrl": "",
          "clientId": "",
          "clientSecret": "",
          "username": "",
          "password": "",
          "challengeAlgorithm": "S256",
          "code_verifier": "Bearer",
          "scope": "",
          "state": "",
          "client_authentication": "header",
          "refreshTokenUrl": "",
          "authRequestParams": [],
          "tokenRequestParams": [],
          "refreshRequestParams": []
        },
        "hawk": {
          "authId": "",
          "authKey": "",
          "algorithm": "",
          "user": "",
          "nonce": "",
          "extraData": "",
          "app": "",
          "delegation": "",
          "timestamp": "",
          "includePayloadHash": false
        },
        "awsv4": {
          "accessKey": "",
          "secretKey": "",
          "region": "",
          "service": "",
          "sessionToken": "",
          "addAuthDataToQuery": false
        },
        "ntlm": {
          "username": "",
          "password": "",
          "domain": "",
          "workstation": "",
          "disableRetryRequest": false
        },
        "edgegrid": {
          "accessToken": "",
          "clientToken": "",
          "clientSecret": "",
          "nonce": "",
          "timestamp": "",
          "baseURi": "",
          "headersToSign": ""
        },
        "noauth": {},
        "jwt": {
          "addTokenTo": "header",
          "algorithm": "HS256",
          "secret": "",
          "isSecretBase64Encoded": false,
          "payload": "",
          "headerPrefix": "Bearer",
          "queryParamKey": "token",
          "header": ""
        },
        "asap": {
          "alg": "HS256",
          "iss": "",
          "aud": "",
          "kid": "",
          "privateKey": "",
          "sub": "",
          "claims": "",
          "exp": ""
        }
      },
      "pre_tasks": [],
      "post_tasks": []
    },
    "is_force": -1,
    "is_deleted": -1,
    "is_conflicted": -1,
    "mark_id": "",
    "vscode_version": "1.7.12"
  },
  {
    "project_id": "",
    "target_id": "81c369978b005",
    "parent_id": "81c32e4fb8005",
    "target_type": "api",
    "name": "Create products",
    "sort": 2,
    "version": 0,
    "mark_id": "",
    "status": 1,
    "is_changed": -1,
    "is_create": -1,
    "method": "POST",
    "url": "{{baseUrl}}/products",
    "request": {
      "auth": {
        "type": "inherit",
        "kv": {
          "key": "",
          "value": "",
          "in": "header"
        },
        "bearer": {
          "key": ""
        },
        "basic": {
          "username": "",
          "password": ""
        },
        "digest": {
          "username": "",
          "password": "",
          "realm": "",
          "nonce": "",
          "algorithm": "MD5",
          "qop": "",
          "nc": "",
          "cnonce": "",
          "opaque": "",
          "disableRetryRequest": false
        },
        "oauth1": {
          "consumerKey": "",
          "consumerSecret": "",
          "signatureMethod": "HMAC-SHA1",
          "addEmptyParamsToSign": true,
          "includeBodyHash": true,
          "addParamsToHeader": false,
          "realm": "",
          "version": "1.0",
          "nonce": "",
          "timestamp": "",
          "verifier": "",
          "callback": "",
          "tokenSecret": "",
          "token": "",
          "disableHeaderEncoding": false
        },
        "oauth2": {
          "addTokenTo": "header",
          "headerPrefix": "Bearer",
          "access_token": "",
          "grant_type": "password_credentials",
          "redirect_uri": "",
          "authUrl": "",
          "accessTokenUrl": "",
          "clientId": "",
          "clientSecret": "",
          "username": "",
          "password": "",
          "challengeAlgorithm": "S256",
          "code_verifier": "Bearer",
          "scope": "",
          "state": "",
          "client_authentication": "header",
          "refreshTokenUrl": "",
          "authRequestParams": [],
          "tokenRequestParams": [],
          "refreshRequestParams": []
        },
        "hawk": {
          "authId": "",
          "authKey": "",
          "algorithm": "",
          "user": "",
          "nonce": "",
          "extraData": "",
          "app": "",
          "delegation": "",
          "timestamp": "",
          "includePayloadHash": false
        },
        "awsv4": {
          "accessKey": "",
          "secretKey": "",
          "region": "",
          "service": "",
          "sessionToken": "",
          "addAuthDataToQuery": false
        },
        "ntlm": {
          "username": "",
          "password": "",
          "domain": "",
          "workstation": "",
          "disableRetryRequest": false
        },
        "edgegrid": {
          "accessToken": "",
          "clientToken": "",
          "clientSecret": "",
          "nonce": "",
          "timestamp": "",
          "baseURi": "",
          "headersToSign": ""
        },
        "noauth": {},
        "jwt": {
          "addTokenTo": "header",
          "algorithm": "HS256",
          "secret": "",
          "isSecretBase64Encoded": false,
          "payload": "",
          "headerPrefix": "Bearer",
          "queryParamKey": "token",
          "header": ""
        },
        "asap": {
          "alg": "HS256",
          "iss": "",
          "aud": "",
          "kid": "",
          "privateKey": "",
          "sub": "",
          "claims": "",
          "exp": ""
        }
      },
      "body": {
        "mode": "json",
        "parameter": [],
        "raw": "{\r\n  \"name\": \"{{$fakerjs.commerce.productName}}\",\r\n  \"description\": \"{{$fakerjs.commerce.productDescription}}\",\r\n  \"vehicleId\":\"\",\r\n  \"price\": {{$fakerjs.commerce.price}},\r\n  \"stock\": {{$fakerjs.Number.int(max=100000,min=1)}},\r\n  \"sku\": \"{{$fakerjs.Commerce.isbn}}\",\r\n  \"imageUrl\": \"https://picsum.photos/400/300?random={{$fakerjs.number.int(1000)}}\"\r\n}\r\n",
        "raw_parameter": [],
        "raw_schema": {
          "type": "object"
        },
        "binary": null
      },
      "pre_tasks": [],
      "post_tasks": [
        {
          "type": "pickVars",
          "id": "6ad0212bb8006",
          "name": "id",
          "enabled": 1,
          "data": {
            "source": "responseJson",
            "variables": [
              {
                "param_id": "6ad041ebb8007",
                "name": "id",
                "expression": "$.id",
                "type": "globalVars"
              }
            ]
          }
        }
      ],
      "header": {
        "parameter": []
      },
      "query": {
        "parameter": [],
        "query_add_equal": 1
      },
      "cookie": {
        "parameter": []
      },
      "restful": {
        "parameter": []
      }
    },
    "response": {
      "is_check_result": 1,
      "example": [
        {
          "example_id": "1",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Success",
            "is_default": 1,
            "code": "200",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        {
          "example_id": "2",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Failure",
            "is_default": -1,
            "code": "404",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        }
      ]
    },
    "description": "",
    "tags": [],
    "ai_expect_enable": -1,
    "is_check_result": 1,
    "is_socket": 1,
    "is_locked": -1,
    "is_force": -1,
    "attribute_info": {},
    "protocol": "http/1.1",
    "ai_expect": {
      "list": [],
      "none_math_expect_id": ""
    },
    "is_deleted": -1,
    "is_conflicted": -1,
    "vscode_version": "1.7.12"
  },
  {
    "project_id": "",
    "target_id": "81c386378b006",
    "parent_id": "81c32e4fb8005",
    "target_type": "api",
    "name": "All products",
    "sort": 3,
    "version": 0,
    "mark_id": "",
    "status": 1,
    "is_changed": -1,
    "is_create": -1,
    "method": "GET",
    "url": "{{baseUrl}}/products",
    "request": {
      "auth": {
        "type": "inherit",
        "kv": {
          "key": "",
          "value": "",
          "in": "header"
        },
        "bearer": {
          "key": ""
        },
        "basic": {
          "username": "",
          "password": ""
        },
        "digest": {
          "username": "",
          "password": "",
          "realm": "",
          "nonce": "",
          "algorithm": "MD5",
          "qop": "",
          "nc": "",
          "cnonce": "",
          "opaque": "",
          "disableRetryRequest": false
        },
        "oauth1": {
          "consumerKey": "",
          "consumerSecret": "",
          "signatureMethod": "HMAC-SHA1",
          "addEmptyParamsToSign": true,
          "includeBodyHash": true,
          "addParamsToHeader": false,
          "realm": "",
          "version": "1.0",
          "nonce": "",
          "timestamp": "",
          "verifier": "",
          "callback": "",
          "tokenSecret": "",
          "token": "",
          "disableHeaderEncoding": false
        },
        "oauth2": {
          "addTokenTo": "header",
          "headerPrefix": "Bearer",
          "access_token": "",
          "grant_type": "password_credentials",
          "redirect_uri": "",
          "authUrl": "",
          "accessTokenUrl": "",
          "clientId": "",
          "clientSecret": "",
          "username": "",
          "password": "",
          "challengeAlgorithm": "S256",
          "code_verifier": "Bearer",
          "scope": "",
          "state": "",
          "client_authentication": "header",
          "refreshTokenUrl": "",
          "authRequestParams": [],
          "tokenRequestParams": [],
          "refreshRequestParams": []
        },
        "hawk": {
          "authId": "",
          "authKey": "",
          "algorithm": "",
          "user": "",
          "nonce": "",
          "extraData": "",
          "app": "",
          "delegation": "",
          "timestamp": "",
          "includePayloadHash": false
        },
        "awsv4": {
          "accessKey": "",
          "secretKey": "",
          "region": "",
          "service": "",
          "sessionToken": "",
          "addAuthDataToQuery": false
        },
        "ntlm": {
          "username": "",
          "password": "",
          "domain": "",
          "workstation": "",
          "disableRetryRequest": false
        },
        "edgegrid": {
          "accessToken": "",
          "clientToken": "",
          "clientSecret": "",
          "nonce": "",
          "timestamp": "",
          "baseURi": "",
          "headersToSign": ""
        },
        "noauth": {},
        "jwt": {
          "addTokenTo": "header",
          "algorithm": "HS256",
          "secret": "",
          "isSecretBase64Encoded": false,
          "payload": "",
          "headerPrefix": "Bearer",
          "queryParamKey": "token",
          "header": ""
        },
        "asap": {
          "alg": "HS256",
          "iss": "",
          "aud": "",
          "kid": "",
          "privateKey": "",
          "sub": "",
          "claims": "",
          "exp": ""
        }
      },
      "body": {
        "mode": "none",
        "parameter": [],
        "raw": "",
        "raw_parameter": [],
        "raw_schema": {
          "type": "object"
        },
        "binary": null
      },
      "pre_tasks": [],
      "post_tasks": [],
      "header": {
        "parameter": []
      },
      "query": {
        "parameter": [],
        "query_add_equal": 1
      },
      "cookie": {
        "parameter": []
      },
      "restful": {
        "parameter": []
      }
    },
    "response": {
      "is_check_result": 1,
      "example": [
        {
          "example_id": "1",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Success",
            "is_default": 1,
            "code": "200",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        {
          "example_id": "2",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Failure",
            "is_default": -1,
            "code": "404",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        }
      ]
    },
    "description": "",
    "tags": [],
    "ai_expect_enable": -1,
    "is_check_result": 1,
    "is_socket": 1,
    "is_locked": -1,
    "is_force": -1,
    "attribute_info": {},
    "protocol": "http/1.1",
    "ai_expect": {
      "list": [],
      "none_math_expect_id": ""
    },
    "is_deleted": -1,
    "is_conflicted": -1,
    "vscode_version": "1.7.12"
  },
  {
    "project_id": "",
    "target_id": "81c398b78b007",
    "parent_id": "81c32e4fb8005",
    "target_type": "api",
    "name": "One Product Static",
    "sort": 4,
    "version": 0,
    "mark_id": "",
    "status": 1,
    "is_changed": -1,
    "is_create": -1,
    "method": "GET",
    "url": "{{baseUrl}}/products/f130192e-840f-4240-ba96-16286f24f490",
    "request": {
      "auth": {
        "type": "inherit",
        "kv": {
          "key": "",
          "value": "",
          "in": "header"
        },
        "bearer": {
          "key": ""
        },
        "basic": {
          "username": "",
          "password": ""
        },
        "digest": {
          "username": "",
          "password": "",
          "realm": "",
          "nonce": "",
          "algorithm": "MD5",
          "qop": "",
          "nc": "",
          "cnonce": "",
          "opaque": "",
          "disableRetryRequest": false
        },
        "oauth1": {
          "consumerKey": "",
          "consumerSecret": "",
          "signatureMethod": "HMAC-SHA1",
          "addEmptyParamsToSign": true,
          "includeBodyHash": true,
          "addParamsToHeader": false,
          "realm": "",
          "version": "1.0",
          "nonce": "",
          "timestamp": "",
          "verifier": "",
          "callback": "",
          "tokenSecret": "",
          "token": "",
          "disableHeaderEncoding": false
        },
        "oauth2": {
          "addTokenTo": "header",
          "headerPrefix": "Bearer",
          "access_token": "",
          "grant_type": "password_credentials",
          "redirect_uri": "",
          "authUrl": "",
          "accessTokenUrl": "",
          "clientId": "",
          "clientSecret": "",
          "username": "",
          "password": "",
          "challengeAlgorithm": "S256",
          "code_verifier": "Bearer",
          "scope": "",
          "state": "",
          "client_authentication": "header",
          "refreshTokenUrl": "",
          "authRequestParams": [],
          "tokenRequestParams": [],
          "refreshRequestParams": []
        },
        "hawk": {
          "authId": "",
          "authKey": "",
          "algorithm": "",
          "user": "",
          "nonce": "",
          "extraData": "",
          "app": "",
          "delegation": "",
          "timestamp": "",
          "includePayloadHash": false
        },
        "awsv4": {
          "accessKey": "",
          "secretKey": "",
          "region": "",
          "service": "",
          "sessionToken": "",
          "addAuthDataToQuery": false
        },
        "ntlm": {
          "username": "",
          "password": "",
          "domain": "",
          "workstation": "",
          "disableRetryRequest": false
        },
        "edgegrid": {
          "accessToken": "",
          "clientToken": "",
          "clientSecret": "",
          "nonce": "",
          "timestamp": "",
          "baseURi": "",
          "headersToSign": ""
        },
        "noauth": {},
        "jwt": {
          "addTokenTo": "header",
          "algorithm": "HS256",
          "secret": "",
          "isSecretBase64Encoded": false,
          "payload": "",
          "headerPrefix": "Bearer",
          "queryParamKey": "token",
          "header": ""
        },
        "asap": {
          "alg": "HS256",
          "iss": "",
          "aud": "",
          "kid": "",
          "privateKey": "",
          "sub": "",
          "claims": "",
          "exp": ""
        }
      },
      "body": {
        "mode": "none",
        "parameter": [],
        "raw": "",
        "raw_parameter": [],
        "raw_schema": {
          "type": "object"
        },
        "binary": null
      },
      "pre_tasks": [],
      "post_tasks": [
        {
          "type": "pickVars",
          "id": "6acc5663b801b",
          "name": "id",
          "enabled": 1,
          "data": {
            "source": "responseJson",
            "variables": [
              {
                "param_id": "6acc6bdfb801c",
                "name": "id",
                "expression": "$.id",
                "type": "globalVars"
              }
            ]
          }
        }
      ],
      "header": {
        "parameter": []
      },
      "query": {
        "parameter": [],
        "query_add_equal": 1
      },
      "cookie": {
        "parameter": []
      },
      "restful": {
        "parameter": []
      }
    },
    "response": {
      "is_check_result": 1,
      "example": [
        {
          "example_id": "1",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Success",
            "is_default": 1,
            "code": "200",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        {
          "example_id": "2",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Failure",
            "is_default": -1,
            "code": "404",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        }
      ]
    },
    "description": "",
    "tags": [],
    "ai_expect_enable": -1,
    "is_check_result": 1,
    "is_socket": 1,
    "is_locked": -1,
    "is_force": -1,
    "attribute_info": {},
    "protocol": "http/1.1",
    "ai_expect": {
      "list": [],
      "none_math_expect_id": ""
    },
    "is_deleted": -1,
    "is_conflicted": -1,
    "vscode_version": "1.7.12"
  },
  {
    "project_id": "",
    "target_id": "81c3a9178b008",
    "parent_id": "81c32e4fb8005",
    "target_type": "api",
    "name": "One Product",
    "sort": 5,
    "version": 0,
    "mark_id": "",
    "status": 1,
    "is_changed": -1,
    "is_create": -1,
    "method": "GET",
    "url": "{{baseUrl}}/products/{{id}}",
    "request": {
      "auth": {
        "type": "inherit",
        "kv": {
          "key": "",
          "value": "",
          "in": "header"
        },
        "bearer": {
          "key": ""
        },
        "basic": {
          "username": "",
          "password": ""
        },
        "digest": {
          "username": "",
          "password": "",
          "realm": "",
          "nonce": "",
          "algorithm": "MD5",
          "qop": "",
          "nc": "",
          "cnonce": "",
          "opaque": "",
          "disableRetryRequest": false
        },
        "oauth1": {
          "consumerKey": "",
          "consumerSecret": "",
          "signatureMethod": "HMAC-SHA1",
          "addEmptyParamsToSign": true,
          "includeBodyHash": true,
          "addParamsToHeader": false,
          "realm": "",
          "version": "1.0",
          "nonce": "",
          "timestamp": "",
          "verifier": "",
          "callback": "",
          "tokenSecret": "",
          "token": "",
          "disableHeaderEncoding": false
        },
        "oauth2": {
          "addTokenTo": "header",
          "headerPrefix": "Bearer",
          "access_token": "",
          "grant_type": "password_credentials",
          "redirect_uri": "",
          "authUrl": "",
          "accessTokenUrl": "",
          "clientId": "",
          "clientSecret": "",
          "username": "",
          "password": "",
          "challengeAlgorithm": "S256",
          "code_verifier": "Bearer",
          "scope": "",
          "state": "",
          "client_authentication": "header",
          "refreshTokenUrl": "",
          "authRequestParams": [],
          "tokenRequestParams": [],
          "refreshRequestParams": []
        },
        "hawk": {
          "authId": "",
          "authKey": "",
          "algorithm": "",
          "user": "",
          "nonce": "",
          "extraData": "",
          "app": "",
          "delegation": "",
          "timestamp": "",
          "includePayloadHash": false
        },
        "awsv4": {
          "accessKey": "",
          "secretKey": "",
          "region": "",
          "service": "",
          "sessionToken": "",
          "addAuthDataToQuery": false
        },
        "ntlm": {
          "username": "",
          "password": "",
          "domain": "",
          "workstation": "",
          "disableRetryRequest": false
        },
        "edgegrid": {
          "accessToken": "",
          "clientToken": "",
          "clientSecret": "",
          "nonce": "",
          "timestamp": "",
          "baseURi": "",
          "headersToSign": ""
        },
        "noauth": {},
        "jwt": {
          "addTokenTo": "header",
          "algorithm": "HS256",
          "secret": "",
          "isSecretBase64Encoded": false,
          "payload": "",
          "headerPrefix": "Bearer",
          "queryParamKey": "token",
          "header": ""
        },
        "asap": {
          "alg": "HS256",
          "iss": "",
          "aud": "",
          "kid": "",
          "privateKey": "",
          "sub": "",
          "claims": "",
          "exp": ""
        }
      },
      "body": {
        "mode": "none",
        "parameter": [],
        "raw": "",
        "raw_parameter": [],
        "raw_schema": {
          "type": "object"
        },
        "binary": null
      },
      "pre_tasks": [],
      "post_tasks": [],
      "header": {
        "parameter": []
      },
      "query": {
        "parameter": [],
        "query_add_equal": 1
      },
      "cookie": {
        "parameter": []
      },
      "restful": {
        "parameter": []
      }
    },
    "response": {
      "is_check_result": 1,
      "example": [
        {
          "example_id": "1",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Success",
            "is_default": 1,
            "code": "200",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        {
          "example_id": "2",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Failure",
            "is_default": -1,
            "code": "404",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        }
      ]
    },
    "description": "",
    "tags": [],
    "ai_expect_enable": -1,
    "is_check_result": 1,
    "is_socket": 1,
    "is_locked": -1,
    "is_force": -1,
    "attribute_info": {},
    "protocol": "http/1.1",
    "ai_expect": {
      "list": [],
      "none_math_expect_id": ""
    },
    "is_deleted": -1,
    "is_conflicted": -1,
    "vscode_version": "1.7.12"
  },
  {
    "project_id": "",
    "target_id": "81c3ba7f8b009",
    "parent_id": "81c32e4fb8005",
    "target_type": "api",
    "name": "Update Productos",
    "sort": 6,
    "version": 0,
    "mark_id": "",
    "status": 1,
    "is_changed": -1,
    "is_create": -1,
    "method": "PATCH",
    "url": "{{baseUrl}}/products/{{id}}",
    "request": {
      "auth": {
        "type": "inherit",
        "kv": {
          "key": "",
          "value": "",
          "in": "header"
        },
        "bearer": {
          "key": ""
        },
        "basic": {
          "username": "",
          "password": ""
        },
        "digest": {
          "username": "",
          "password": "",
          "realm": "",
          "nonce": "",
          "algorithm": "MD5",
          "qop": "",
          "nc": "",
          "cnonce": "",
          "opaque": "",
          "disableRetryRequest": false
        },
        "oauth1": {
          "consumerKey": "",
          "consumerSecret": "",
          "signatureMethod": "HMAC-SHA1",
          "addEmptyParamsToSign": true,
          "includeBodyHash": true,
          "addParamsToHeader": false,
          "realm": "",
          "version": "1.0",
          "nonce": "",
          "timestamp": "",
          "verifier": "",
          "callback": "",
          "tokenSecret": "",
          "token": "",
          "disableHeaderEncoding": false
        },
        "oauth2": {
          "addTokenTo": "header",
          "headerPrefix": "Bearer",
          "access_token": "",
          "grant_type": "password_credentials",
          "redirect_uri": "",
          "authUrl": "",
          "accessTokenUrl": "",
          "clientId": "",
          "clientSecret": "",
          "username": "",
          "password": "",
          "challengeAlgorithm": "S256",
          "code_verifier": "Bearer",
          "scope": "",
          "state": "",
          "client_authentication": "header",
          "refreshTokenUrl": "",
          "authRequestParams": [],
          "tokenRequestParams": [],
          "refreshRequestParams": []
        },
        "hawk": {
          "authId": "",
          "authKey": "",
          "algorithm": "",
          "user": "",
          "nonce": "",
          "extraData": "",
          "app": "",
          "delegation": "",
          "timestamp": "",
          "includePayloadHash": false
        },
        "awsv4": {
          "accessKey": "",
          "secretKey": "",
          "region": "",
          "service": "",
          "sessionToken": "",
          "addAuthDataToQuery": false
        },
        "ntlm": {
          "username": "",
          "password": "",
          "domain": "",
          "workstation": "",
          "disableRetryRequest": false
        },
        "edgegrid": {
          "accessToken": "",
          "clientToken": "",
          "clientSecret": "",
          "nonce": "",
          "timestamp": "",
          "baseURi": "",
          "headersToSign": ""
        },
        "noauth": {},
        "jwt": {
          "addTokenTo": "header",
          "algorithm": "HS256",
          "secret": "",
          "isSecretBase64Encoded": false,
          "payload": "",
          "headerPrefix": "Bearer",
          "queryParamKey": "token",
          "header": ""
        },
        "asap": {
          "alg": "HS256",
          "iss": "",
          "aud": "",
          "kid": "",
          "privateKey": "",
          "sub": "",
          "claims": "",
          "exp": ""
        }
      },
      "body": {
        "mode": "json",
        "parameter": [],
        "raw": "{\r\n  \"name\": \"{{$fakerjs.commerce.productName}}\",\r\n  \"description\": \"{{$fakerjs.commerce.productDescription}}\",\r\n  \"imageUrl\": \"https://picsum.photos/400/300?random={{$fakerjs.number.int(1000)}}\"\r\n}\r\n",
        "raw_parameter": [],
        "raw_schema": {
          "type": "object"
        },
        "binary": null
      },
      "pre_tasks": [],
      "post_tasks": [],
      "header": {
        "parameter": []
      },
      "query": {
        "parameter": [],
        "query_add_equal": 1
      },
      "cookie": {
        "parameter": []
      },
      "restful": {
        "parameter": []
      }
    },
    "response": {
      "is_check_result": 1,
      "example": [
        {
          "example_id": "1",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Success",
            "is_default": 1,
            "code": "200",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        {
          "example_id": "2",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Failure",
            "is_default": -1,
            "code": "404",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        }
      ]
    },
    "description": "",
    "tags": [],
    "ai_expect_enable": -1,
    "is_check_result": 1,
    "is_socket": 1,
    "is_locked": -1,
    "is_force": -1,
    "attribute_info": {},
    "protocol": "http/1.1",
    "ai_expect": {
      "list": [],
      "none_math_expect_id": ""
    },
    "is_deleted": -1,
    "is_conflicted": -1,
    "vscode_version": "1.7.12"
  },
  {
    "project_id": "",
    "target_id": "81c3cd7b8b00a",
    "parent_id": "81c32e4fb8005",
    "target_type": "api",
    "name": "DeleteProducts",
    "sort": 7,
    "version": 0,
    "mark_id": "",
    "status": 1,
    "is_changed": -1,
    "is_create": -1,
    "method": "DELETE",
    "url": "{{baseUrl}}/products/{{id}}",
    "request": {
      "auth": {
        "type": "inherit",
        "kv": {
          "key": "",
          "value": "",
          "in": "header"
        },
        "bearer": {
          "key": ""
        },
        "basic": {
          "username": "",
          "password": ""
        },
        "digest": {
          "username": "",
          "password": "",
          "realm": "",
          "nonce": "",
          "algorithm": "MD5",
          "qop": "",
          "nc": "",
          "cnonce": "",
          "opaque": "",
          "disableRetryRequest": false
        },
        "oauth1": {
          "consumerKey": "",
          "consumerSecret": "",
          "signatureMethod": "HMAC-SHA1",
          "addEmptyParamsToSign": true,
          "includeBodyHash": true,
          "addParamsToHeader": false,
          "realm": "",
          "version": "1.0",
          "nonce": "",
          "timestamp": "",
          "verifier": "",
          "callback": "",
          "tokenSecret": "",
          "token": "",
          "disableHeaderEncoding": false
        },
        "oauth2": {
          "addTokenTo": "header",
          "headerPrefix": "Bearer",
          "access_token": "",
          "grant_type": "password_credentials",
          "redirect_uri": "",
          "authUrl": "",
          "accessTokenUrl": "",
          "clientId": "",
          "clientSecret": "",
          "username": "",
          "password": "",
          "challengeAlgorithm": "S256",
          "code_verifier": "Bearer",
          "scope": "",
          "state": "",
          "client_authentication": "header",
          "refreshTokenUrl": "",
          "authRequestParams": [],
          "tokenRequestParams": [],
          "refreshRequestParams": []
        },
        "hawk": {
          "authId": "",
          "authKey": "",
          "algorithm": "",
          "user": "",
          "nonce": "",
          "extraData": "",
          "app": "",
          "delegation": "",
          "timestamp": "",
          "includePayloadHash": false
        },
        "awsv4": {
          "accessKey": "",
          "secretKey": "",
          "region": "",
          "service": "",
          "sessionToken": "",
          "addAuthDataToQuery": false
        },
        "ntlm": {
          "username": "",
          "password": "",
          "domain": "",
          "workstation": "",
          "disableRetryRequest": false
        },
        "edgegrid": {
          "accessToken": "",
          "clientToken": "",
          "clientSecret": "",
          "nonce": "",
          "timestamp": "",
          "baseURi": "",
          "headersToSign": ""
        },
        "noauth": {},
        "jwt": {
          "addTokenTo": "header",
          "algorithm": "HS256",
          "secret": "",
          "isSecretBase64Encoded": false,
          "payload": "",
          "headerPrefix": "Bearer",
          "queryParamKey": "token",
          "header": ""
        },
        "asap": {
          "alg": "HS256",
          "iss": "",
          "aud": "",
          "kid": "",
          "privateKey": "",
          "sub": "",
          "claims": "",
          "exp": ""
        }
      },
      "body": {
        "mode": "json",
        "parameter": [],
        "raw": "",
        "raw_parameter": [],
        "raw_schema": {
          "type": "object"
        },
        "binary": null
      },
      "pre_tasks": [],
      "post_tasks": [
        {
          "type": "pickVars",
          "id": "6ac7fddbb8009",
          "name": "Extract Variables",
          "enabled": -1,
          "data": {
            "source": "responseJson",
            "variables": [
              {
                "param_id": "6ac81b7fb800a",
                "name": "id",
                "expression": "",
                "type": "envVars",
                "static": true
              }
            ]
          }
        }
      ],
      "header": {
        "parameter": []
      },
      "query": {
        "parameter": [],
        "query_add_equal": 1
      },
      "cookie": {
        "parameter": []
      },
      "restful": {
        "parameter": []
      }
    },
    "response": {
      "is_check_result": 1,
      "example": [
        {
          "example_id": "1",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Success",
            "is_default": 1,
            "code": "200",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        {
          "example_id": "2",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Failure",
            "is_default": -1,
            "code": "404",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        }
      ]
    },
    "description": "",
    "tags": [],
    "ai_expect_enable": -1,
    "is_check_result": 1,
    "is_socket": 1,
    "is_locked": -1,
    "is_force": -1,
    "attribute_info": {},
    "protocol": "http/1.1",
    "ai_expect": {
      "list": [],
      "none_math_expect_id": ""
    },
    "is_deleted": -1,
    "is_conflicted": -1,
    "vscode_version": "1.7.12"
  }
]